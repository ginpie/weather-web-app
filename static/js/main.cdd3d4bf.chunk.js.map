{"version":3,"sources":["serviceWorker.js","apis/apikey.js","apis/getDataByGeo/getDataByGeo.js","components/Canva/Today/Today.jsx","components/Canva/ThreeDays/CardSmall/CardSmall.jsx","apis/getWeatherByCity/getWeatherByCity.js","apis/get7ForecastByCity/get7ForecastByCity.js","apis/weatherIcon.js","components/Canva/ThreeDays/ThreeDays.jsx","components/Canva/PlaceToVisit/CardPlace/CardPlace.jsx","components/Canva/PlaceToVisit/placeData.js","components/Canva/PlaceToVisit/PlaceToVisit.jsx","components/Canva/Others/CardMedium/CardMedium.jsx","components/Canva/Others/otherData.js","components/Canva/Others/Others.jsx","components/Canva/Canva.jsx","components/Canva/Clip/Clip.jsx","components/SearchBar/SearchBar.jsx","components/Homepage/Homepage.jsx","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","require","config","process","REACT_APP_API_CURRENT","REACT_APP_API_FORECAST","REACT_APP_API_APPID","instance","create","baseURL","getDataByGeo","long","lat","get","params","lon","then","res","data","catch","err","console","log","Container","styled","section","Box","div","City","Area","p","IconLoc","i","Wrapper","Text","Flag","img","Map","Today","props","state","addEventListener","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","document","getElementById","innerHTML","name","sys","country","setAttribute","style","background","backgroundSize","backgroundPosition","className","id","React","Component","Icon","TextBox","Date","Weather","Temp","CardSmall","icon","date","weather","tempMax","tempMin","bg","src","getWeatherByCity","city","q","a","coord","get7ForecastByCity","weatherIcon","set","Title","h3","Body","ThreeDays","days","tempDays","daily","forEach","dt","localdate","Intl","DateTimeFormat","weekday","format","localdt","setState","this","map","e","main","Math","round","temp","max","min","key","CardPlace","text","grid","backgroundImage","gridArea","placeData","PlaceToVisit","IconBox","CityBox","Country","WindBox","VerticalDivider","VerticalDividerL","CardMedium","hum","wind","speed","otherData","Others","Canva","TempText","Side1","Side2","Clip","Number","Input","input","SearchBar","placeholder","Background","HomePage","App","exact","path","component","Homepage","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cdd3d4bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","require(\"dotenv\").config();\n\nexport const {\n  REACT_APP_API_CURRENT,\n  REACT_APP_API_FORECAST,\n  REACT_APP_API_APPID,\n} = process.env;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getDataByGeo(long, lat) {\n  return instance\n    .get(\"\", {\n      params: {\n        lon: long,\n        lat: lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getDataByGeo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\n\nconst back =\n  \"https://images.unsplash.com/photo-1524820197278-540916411e20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1372&q=80\";\n\nconst map =\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603434915/weather-app%20assets/iconfinder_opera_house_sydney_house_australia_architecture_landmark_travel_building_tourism_3465591_ybght9.svg\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 1 / span 5;\n  grid-row: 1 / span 2;\n  position: relative;\n`;\n\nconst Box = styled.div`\n  width: 200px;\n  height: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  position: absolute;\n  top: 50px;\n  left: 80px;\n`;\n\nconst City = styled.div`\n  display: grid;\n  grid-template-columns: 30px 120px;\n  grid-template-rows: repeat(2, 30px);\n`;\n\nconst Area = styled.p`\n  font-size: 12px;\n  margin: 0 6px 0 0;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  color: #0270c2;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nconst Wrapper = styled.div`\n  height: 20px;\n  grid-row: 2;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n`;\n\nconst Text = styled.div`\n  color: #000;\n  font-weight: 500;\n  grid-row: 1;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n`;\n\nconst Flag = styled.img`\n  width: 20px;\n  grid-row: 2;\n  grid-column: 1;\n  align-self: top;\n`;\n\nconst Map = styled.div`\n  width: 50px;\n  height: 50px;\n`;\n\nclass Today extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myCity\").innerHTML = data.name;\n            document.getElementById(\"myCountry\").innerHTML = data.sys.country;\n            document\n              .getElementById(\"myFlag\")\n              .setAttribute(\n                \"src\",\n                \"https://www.countryflags.io/au/flat/64.png\"\n              );\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container\n        style={{\n          background: `url(${back})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      >\n        <Box>\n          <City>\n            <IconLoc className=\"fas fa-map-marker-alt\" />\n            <Text id=\"myCity\"></Text>\n            <Wrapper>\n              <Area id=\"myCountry\"></Area>\n              <Flag id=\"myFlag\" />\n            </Wrapper>\n          </City>\n\n          <Map\n            style={{\n              background: `url(${map})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n            }}\n          />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default Today;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 80px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 5px 5px 15px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Icon = styled.img`\n  width: 25%;\n`;\n\nconst TextBox = styled.div`\n  width: 30%;\n`;\n\nconst Date = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst Weather = styled.p`\n  font-size: 14px;\n  margin: 0;\n  color: #555;\n`;\n\nconst Temp = styled.div`\n  width: 35%;\n  height: 105%;\n\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`;\n\nconst CardSmall = ({ icon, date, weather, tempMax, tempMin, bg }) => (\n  <Container>\n    <Icon src={icon} />\n    <TextBox>\n      <Date>{date}</Date>\n      <Weather>{weather}</Weather>\n    </TextBox>\n    <Temp style={{ background: bg }}>\n      {tempMax}° / {tempMin}°\n    </Temp>\n  </Container>\n);\n\nexport default CardSmall;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getWeatherByCity(city) {\n  return instance\n    .get(\"\", {\n      params: {\n        q: city,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getWeatherByCity;\n","import { REACT_APP_API_FORECAST, REACT_APP_API_APPID } from \"../apikey\";\nimport getWeatherByCity from \"../getWeatherByCity\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_FORECAST + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nasync function get7ForecastByCity(city) {\n  let a;\n  await getWeatherByCity(city).then((res) => {\n    a = res.coord;\n  });\n  return instance\n    .get(\"\", {\n      params: {\n        lon: a.lon,\n        lat: a.lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default get7ForecastByCity;\n","const weatherIcon = new Map();\n\nweatherIcon.set(\n  \"Clear\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517457/weather-app%20assets/clear_szhil3.svg\"\n);\nweatherIcon.set(\n  \"Rain\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517503/weather-app%20assets/rain_isnziw.svg\"\n);\nweatherIcon.set(\n  \"Clouds\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\"\n);\n\nexport default weatherIcon;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardSmall from \"./CardSmall\";\nimport get7ForecastByCity from \"../../../apis/get7ForecastByCity\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 1;\n  grid-row: 3;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  text-align: center;\n`;\n\nconst Body = styled.div``;\n\nclass ThreeDays extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: [],\n    };\n  }\n\n  componentDidMount() {\n    get7ForecastByCity(\"los angeles\").then((data) => {\n      const tempDays = [data.daily[0], data.daily[1], data.daily[2]];\n\n      tempDays.forEach((i) => {\n        // convert unix utc dt to local date\n        const date = new Date(i.dt * 1e3);\n        const options = { weekday: \"long\" };\n        const localdate = new Intl.DateTimeFormat(\"en-US\", options).format(\n          date\n        );\n        i.localdt = localdate;\n        // get icon by weather\n      });\n      this.setState({\n        days: tempDays,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>\n          <b>3 Days</b> Forecast\n        </Title>\n        <Body>\n          {this.state.days.map((i, e) => {\n            return (\n              <CardSmall\n                icon={weatherIcon.get(i.weather[0].main)}\n                date={i.localdt}\n                weather={i.weather[0].main}\n                tempMax={Math.round(i.temp.max - 273.15)}\n                tempMin={Math.round(i.temp.min - 273.15)}\n                bg={e === 0 ? \"#0aa9ee\" : \"#dee6f4\"}\n                key={e}\n              />\n            );\n          })}\n        </Body>\n      </Container>\n    );\n  }\n}\n\nexport default ThreeDays;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.1) 5px 25px 35px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst City = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 20px;\n  text-shadow: rgba(10, 10, 10, 1) 1px 1px 5px;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  color: #fff;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nconst Text = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n  color: #fff;\n`;\n\nconst CardPlace = ({ bg, text, grid }) => (\n  <Container\n    style={{\n      backgroundImage: `url(${bg})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      gridArea: grid,\n    }}\n  >\n    <City>\n      <IconLoc className=\"fas fa-map-marker-alt\" />\n      <Text>{text}</Text>\n    </City>\n  </Container>\n);\n\nexport default CardPlace;\n","export const placeData = [\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1588302290751-8b7a1d879cc1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\n    text: \"Harbour Bridge\",\n    grid: \"1 / 1 / span 2 / 1\",\n  },\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1551352912-484163ad5be9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\",\n    text: \"Sydney Opera House\",\n    grid: \"1 / 2 / 1 / 2\",\n  },\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1555753359-2964c809e729?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\n    text: \"Queen Victoria's Building\",\n    grid: \"2 / 2 / 2 / 2\",\n  },\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardPlace from \"./CardPlace\";\nimport { placeData } from \"./placeData\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 2 / span 2;\n  grid-row: 3 / span 2;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  text-align: left;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  height: 80%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nconst PlaceToVisit = () => (\n  <Container>\n    <Title>\n      <b>Place to</b> Visit\n    </Title>\n    <Body>\n      {placeData.map((i, e) => {\n        return <CardPlace bg={i.bg} text={i.text} grid={i.grid} key={e} />;\n      })}\n    </Body>\n  </Container>\n);\n\nexport default PlaceToVisit;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 180px;\n  margin-top: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 5px 5px 15px 0;\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(3, 33%);\n  grid-template-rows: 2fr 1fr;\n`;\n\nconst IconBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #dee6f4;\n  border-radius: 20px 0 20px 0;\n  grid-area: 1 / 1 / span 1 / span 1;\n`;\n\nconst Icon = styled.img`\n  width: 80%;\n`;\n\nconst TextBox = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-area: 1 / 2 / span 1 / span 2;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Temp = styled.div`\n  font-family: \"Oswald\", sans-serif;\n  width: 45%;\n  padding-right: 10px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 40px;\n\n  &::after {\n    content: \"°C\";\n    font-size: 18px;\n  }\n`;\n\nconst CityBox = styled.div`\n  width: 60%;\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n`;\n\nconst City = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst Country = styled.p`\n  font-size: 14px;\n  margin: 0;\n  color: #555;\n`;\n\nconst WindBox = styled.div`\n  width: 80%;\n  height: 30%;\n  color: #aaa;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  grid-area: 2 / 1 / span 1 / span 3;\n  place-self: center;\n`;\n\nconst Text = styled.p``;\n\nconst VerticalDivider = styled.div`\n  width: 1px;\n  height: 12px;\n  background: #aaa;\n`;\n\nconst VerticalDividerL = styled.div`\n  width: 1px;\n  height: 50px;\n  background: #aaa;\n`;\n\nconst CardMedium = ({ icon, hum, wind, speed, temp, city, country }) => (\n  <Container>\n    <IconBox>\n      <Icon src={icon} />\n    </IconBox>\n\n    <TextBox>\n      <Temp>{temp}</Temp>\n      <VerticalDividerL />\n      <CityBox>\n        <City>{city}</City>\n        <Country>{country}</Country>\n      </CityBox>\n    </TextBox>\n\n    <WindBox>\n      <Text>Humidity: {hum}</Text>\n      <VerticalDivider />\n      <Text>{wind}</Text>\n      <VerticalDivider />\n      <Text>{speed}km/h</Text>\n    </WindBox>\n  </Container>\n);\n\nexport default CardMedium;\n","export const otherData = [\n  {\n    icon:\n      \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\",\n    hum: \"40%\",\n    wind: \"Northwest\",\n    speed: \"8.3\",\n    temp: \"29\",\n    city: \"Melbourne\",\n    country: \"Australia\",\n  },\n  {\n    icon:\n      \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\",\n    hum: \"26%\",\n    wind: \"South\",\n    speed: \"5.3\",\n    temp: \"16\",\n    city: \"Beijing\",\n    country: \"China\",\n  },\n  {\n    icon:\n      \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\",\n    hum: \"26%\",\n    wind: \"South\",\n    speed: \"5.3\",\n    temp: \"16\",\n    city: \"Beijing\",\n    country: \"China\",\n  },\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardMedium from \"./CardMedium\";\nimport { otherData } from \"./otherData\";\n\nconst Container = styled.section`\n  width: 100%;\n  border-radius: 30px;\n  overflow-wrap: auto;\n  grid-area: 2 / 4 / span 3 / span 1;\n  align-self: end;\n  z-index: 100;\n`;\n\nconst Others = () => (\n  <Container>\n    {otherData.map((i, e) => {\n      return (\n        <CardMedium\n          icon={i.icon}\n          hum={i.hum}\n          wind={i.wind}\n          speed={i.speed}\n          temp={i.temp}\n          city={i.city}\n          country={i.country}\n          key={e}\n        />\n      );\n    })}\n  </Container>\n);\n\nexport default Others;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Today from \"./Today\";\nimport ThreeDays from \"./ThreeDays\";\nimport PlaceToVisit from \"./PlaceToVisit\";\nimport Others from \"./Others\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1.2fr repeat(2, 1fr) 1.5fr 0.1fr;\n  gap: 20px 30px;\n  grid-template-rows: repeat(4, 23%);\n`;\n\nconst Canva = () => (\n  <Container>\n    <Today />\n    <ThreeDays />\n    <PlaceToVisit />\n    <Others />\n  </Container>\n);\n\nexport default Canva;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst dark = \"#0270c2\";\nconst light = \"#1fa1f1\";\n\nconst Container = styled.div`\n  min-height: 300px;\n  position: absolute;\n  left: 0;\n  top: 40px;\n  z-index: 100;\n`;\n\nconst Box = styled.div`\n  width: 120px;\n  height: 190px;\n  background: ${light};\n  border-radius: 0 30px 30px 0;\n  box-shadow: rgba(50, 50, 50, 0.5) 8px 35px 55px 5px;\n`;\n\nconst Weather = styled.div`\n  width: 120px;\n  height: 95px;\n  background: ${dark};\n  border-radius: 0 30px 30px 15px;\n  z-index: 101;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled.img`\n  width: 80px;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  color: #fff;\n  margin: -15px 0 0 0;\n`;\n\nconst TempText = styled.p`\n  width: 120px;\n  height: 95px;\n  font-size: 30px;\n  color: #fff;\n  margin: 0;\n  font-family: \"Oswald\", sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &::after {\n    content: \"°C\";\n    color: #fff;\n    font-size: 20px;\n  }\n`;\n\nconst Temp = styled.div`\n  width: 80px;\n  height: 80px;\n`;\n\nconst Side1 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${dark};\n  clip-path: polygon(0% 100%, 0% 85%, 2% 92%, 5% 95%, 8% 98%, 15% 100%);\n`;\n\nconst Side2 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${light};\n  clip-path: polygon(0% 0%, 0% 15%, 2% 8%, 5% 5%, 8% 2%, 15% 0%);\n`;\n\nclass Clip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { icon: null, weather: null, temp: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myWeather\").innerHTML =\n              data.weather[0].main;\n            document.getElementById(\"myTemp\").innerHTML = Math.round(\n              Number(data.main.temp) - 273.15\n            );\n            this.setState({ icon: weatherIcon.get(data.weather[0].main) });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Side1 />\n        <Box>\n          <Weather>\n            <Icon src={this.state.icon} />\n            <Text id=\"myWeather\" />\n          </Weather>\n          <Temp>\n            <TempText id=\"myTemp\" />\n          </Temp>\n        </Box>\n        <Side2 />\n      </Container>\n    );\n  }\n}\n\nexport default Clip;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 800px;\n  min-width: 320px;\n  height: 30px;\n  margin-bottom: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 3px 10px 3px 20px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 90%;\n  height: 100%;\n  border: none;\n  padding: 0;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Icon = styled.i`\n  font-size: 18px;\n  color: #999;\n  cursor: pointer;\n  &:hover {\n    color: #000;\n  }\n`;\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Input placeholder=\"Search weather by areas...\"></Input>\n          <Icon className=\"fas fa-search\"></Icon>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Canva from \"../Canva\";\nimport Clip from \"../Canva/Clip\";\nimport SearchBar from \"../SearchBar\";\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #e3e8ec;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 1400px;\n  min-width: 1200px;\n  min-height: 700px;\n  max-height: 900px;\n  background-color: #fff;\n  border-radius: 30px;\n  padding: 40px;\n  position: relative;\n  overflow: hidden;\n`;\n\nfunction HomePage() {\n  return (\n    <Background>\n      <SearchBar />\n      <Container>\n        <Clip />\n        <Canva />\n      </Container>\n    </Background>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Homepage from \"../Homepage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}