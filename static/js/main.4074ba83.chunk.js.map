{"version":3,"sources":["serviceWorker.js","apis/apikey.js","apis/getDataByGeo/getDataByGeo.js","apis/getImageByCity/getImageByCity.js","components/Canva/Today/Today.jsx","components/Canva/ThreeDays/CardSmall/CardSmall.jsx","apis/getWeatherByCity/getWeatherByCity.js","apis/get7ForecastByCity/get7ForecastByCity.js","apis/weatherIcon.js","components/Canva/ThreeDays/ThreeDays.jsx","components/Canva/PlaceToVisit/CardPlace/CardPlace.jsx","components/Canva/PlaceToVisit/placeData.js","apis/getPlaceByGeo/getPlaceByGeo.js","components/Canva/PlaceToVisit/PlaceToVisit.jsx","components/Canva/Others/CardMedium/CardMedium.jsx","components/Canva/Others/otherData.js","components/Canva/Others/Others.jsx","components/Canva/Canva.jsx","components/Canva/Clip/Clip.jsx","components/SearchBar/SearchBar.jsx","components/Homepage/Homepage.jsx","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","require","config","process","REACT_APP_API_CURRENT","REACT_APP_API_FORECAST","REACT_APP_API_APPID","REACT_APP_IMAGE_API","REACT_APP_IMAGE_API_APPID","REACT_APP_TRIP_API","REACT_APP_TRIP_API_APPID","instance","create","baseURL","getDataByGeo","long","lat","get","params","lon","then","res","data","catch","err","console","log","getImageByCity","city","client_id","query","page","per_page","orientation","Container","styled","section","Box","div","City","Area","p","IconLoc","i","Wrapper","Text","Flag","img","Map","Today","props","state","myCover","addEventListener","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","document","getElementById","innerHTML","name","sys","country","setAttribute","imgData","image","results","Math","floor","random","urls","regular","setState","background","backgroundSize","backgroundPosition","style","this","className","id","React","Component","Icon","TextBox","Date","Weather","Temp","CardSmall","icon","date","weather","tempMax","tempMin","bg","src","getWeatherByCity","q","a","coord","get7ForecastByCity","weatherIcon","set","Title","h3","Body","ThreeDays","days","tempDays","daily","forEach","dt","localdate","Intl","DateTimeFormat","weekday","format","localdt","map","e","main","round","temp","max","min","key","CardPlace","text","grid","backgroundImage","gridArea","placeData","getPlaceByGeo","apikey","radius","rate","PlaceToVisit","myPlaces","features","slice","length","push","properties","IconBox","CityBox","Country","WindBox","VerticalDivider","VerticalDividerL","CardMedium","windDirection","hum","wind","speed","otherData","Others","tempData","humidity","deg","Canva","TempText","Side1","Side2","Clip","Number","Input","input","SearchBar","placeholder","Background","HomePage","App","basename","exact","path","component","Homepage","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4074ba83.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","require(\"dotenv\").config();\n\nexport const {\n  REACT_APP_API_CURRENT,\n  REACT_APP_API_FORECAST,\n  REACT_APP_API_APPID,\n  REACT_APP_IMAGE_API,\n  REACT_APP_IMAGE_API_APPID,\n  REACT_APP_TRIP_API,\n  REACT_APP_TRIP_API_APPID,\n} = process.env;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getDataByGeo(long, lat) {\n  return instance\n    .get(\"\", {\n      params: {\n        lon: long,\n        lat: lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getDataByGeo;\n","import { REACT_APP_IMAGE_API, REACT_APP_IMAGE_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_IMAGE_API,\n});\n\nfunction getImageByCity(city) {\n  return instance\n    .get(\"\", {\n      params: {\n        client_id: REACT_APP_IMAGE_API_APPID,\n        query: city,\n        page: 1,\n        per_page: 5,\n        orientation: \"landscape\",\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getImageByCity;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\nimport getImageByCity from \"../../../apis/getImageByCity\";\n\nconst map =\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603434915/weather-app%20assets/iconfinder_opera_house_sydney_house_australia_architecture_landmark_travel_building_tourism_3465591_ybght9.svg\";\n\nconst Container = styled.section`\n  background-color: #eee;\n  border-radius: 30px;\n  grid-column: 1 / span 5;\n  grid-row: 1 / span 2;\n  position: relative;\n`;\n\nconst Box = styled.div`\n  width: 180px;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: absolute;\n  top: 0;\n  left: 120px;\n  padding-top: 100px;\n  background-color: rgba(222, 230, 244, 0.7);\n  color: #253237;\n`;\n\nconst City = styled.div`\n  display: grid;\n  grid-template-columns: 30px 120px;\n  grid-template-rows: repeat(2, 30px);\n`;\n\nconst Area = styled.p`\n  font-size: 12px;\n  margin: 0 6px 0 0;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n  color: #0270c2;\n`;\n\nconst Wrapper = styled.div`\n  height: 20px;\n  grid-row: 2;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n`;\n\nconst Text = styled.div`\n  font-weight: 500;\n  grid-row: 1;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n  text-shadow: rgba(200, 200, 200, 0.5) 0 0 3px;\n`;\n\nconst Flag = styled.img`\n  width: 20px;\n  grid-row: 2;\n  grid-column: 1;\n  align-self: top;\n`;\n\nconst Map = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-top: 40px;\n`;\n\nclass Today extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { myCover: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myCity\").innerHTML = data.name;\n            document.getElementById(\"myCountry\").innerHTML = data.sys.country;\n            document\n              .getElementById(\"myFlag\")\n              .setAttribute(\n                \"src\",\n                \"https://www.countryflags.io/\" +\n                  data.sys.country +\n                  \"/flat/64.png\"\n              );\n            getImageByCity(data.name).then((imgData) => {\n              const image =\n                imgData.results[Math.floor(Math.random() * 5)].urls.regular;\n              this.setState({\n                myCover: {\n                  background: `url(${image})`,\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                },\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container style={this.state.myCover}>\n        <Box>\n          <City>\n            <IconLoc className=\"fas fa-map-marker-alt\" />\n            <Text id=\"myCity\"></Text>\n            <Wrapper>\n              <Area id=\"myCountry\"></Area>\n              <Flag id=\"myFlag\" />\n            </Wrapper>\n          </City>\n\n          <Map\n            style={{\n              background: `url(${map})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n            }}\n          />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default Today;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 80px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 5px 5px 15px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Icon = styled.img`\n  width: 25%;\n`;\n\nconst TextBox = styled.div`\n  width: 30%;\n`;\n\nconst Date = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst Weather = styled.p`\n  font-size: 14px;\n  margin: 0;\n  color: #555;\n`;\n\nconst Temp = styled.div`\n  width: 35%;\n  height: 105%;\n\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`;\n\nconst CardSmall = ({ icon, date, weather, tempMax, tempMin, bg }) => (\n  <Container>\n    <Icon src={icon} />\n    <TextBox>\n      <Date>{date}</Date>\n      <Weather>{weather}</Weather>\n    </TextBox>\n    <Temp style={{ background: bg }}>\n      {tempMax}° / {tempMin}°\n    </Temp>\n  </Container>\n);\n\nexport default CardSmall;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getWeatherByCity(city) {\n  return instance\n    .get(\"\", {\n      params: {\n        q: city,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getWeatherByCity;\n","import { REACT_APP_API_FORECAST, REACT_APP_API_APPID } from \"../apikey\";\nimport getWeatherByCity from \"../getWeatherByCity\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_FORECAST + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nasync function get7ForecastByCity(city) {\n  let a;\n  await getWeatherByCity(city).then((res) => {\n    a = res.coord;\n  });\n  return instance\n    .get(\"\", {\n      params: {\n        lon: a.lon,\n        lat: a.lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default get7ForecastByCity;\n","const weatherIcon = new Map();\n\nweatherIcon.set(\n  \"Clear\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517457/weather-app%20assets/clear_szhil3.svg\"\n);\nweatherIcon.set(\n  \"Rain\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517503/weather-app%20assets/rain_isnziw.svg\"\n);\nweatherIcon.set(\n  \"Clouds\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\"\n);\nweatherIcon.set(\n  \"Mist\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603708766/weather-app%20assets/mist_xiprlr.svg\"\n);\nexport default weatherIcon;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardSmall from \"./CardSmall\";\nimport get7ForecastByCity from \"../../../apis/get7ForecastByCity\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 1;\n  grid-row: 3;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  text-align: center;\n`;\n\nconst Body = styled.div``;\n\nclass ThreeDays extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: [],\n    };\n  }\n\n  componentDidMount() {\n    get7ForecastByCity(\"los angeles\").then((data) => {\n      const tempDays = [data.daily[0], data.daily[1], data.daily[2]];\n\n      tempDays.forEach((i) => {\n        // convert unix utc dt to local date\n        const date = new Date(i.dt * 1e3);\n        const options = { weekday: \"long\" };\n        const localdate = new Intl.DateTimeFormat(\"en-US\", options).format(\n          date\n        );\n        i.localdt = localdate;\n        // get icon by weather\n      });\n      this.setState({\n        days: tempDays,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>\n          <b>3 Days</b> Forecast\n        </Title>\n        <Body>\n          {this.state.days.map((i, e) => {\n            return (\n              <CardSmall\n                icon={weatherIcon.get(i.weather[0].main)}\n                date={i.localdt}\n                weather={i.weather[0].main}\n                tempMax={Math.round(i.temp.max - 273.15)}\n                tempMin={Math.round(i.temp.min - 273.15)}\n                bg={e === 0 ? \"#0aa9ee\" : \"#dee6f4\"}\n                key={e}\n              />\n            );\n          })}\n        </Body>\n      </Container>\n    );\n  }\n}\n\nexport default ThreeDays;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.1) 5px 25px 35px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst City = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin: 20px 20px;\n  text-shadow: rgba(10, 10, 10, 1) 1px 1px 5px;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  color: #fff;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nconst Text = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0 0 0 10px;\n  color: #fff;\n`;\n\nconst CardPlace = ({ bg, text, grid }) => (\n  <Container\n    style={{\n      backgroundImage: `url(${bg})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      gridArea: grid,\n    }}\n  >\n    <City>\n      <IconLoc className=\"fas fa-map-marker-alt\" />\n      <Text>{text}</Text>\n    </City>\n  </Container>\n);\n\nexport default CardPlace;\n","export const placeData = [\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1588302290751-8b7a1d879cc1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\n    text: \"Harbour Bridge\",\n    grid: \"1 / 1 / span 2 / 1\",\n  },\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1551352912-484163ad5be9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\",\n    text: \"Sydney Opera House\",\n    grid: \"1 / 2 / 1 / 2\",\n  },\n  {\n    bg:\n      \"https://images.unsplash.com/photo-1555753359-2964c809e729?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\n    text: \"Queen Victoria's Building\",\n    grid: \"2 / 2 / 2 / 2\",\n  },\n];\n","import { REACT_APP_TRIP_API, REACT_APP_TRIP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_TRIP_API + \"/en/places/radius\",\n});\n\nfunction getPlaceByGeo(long, lat) {\n  return instance\n    .get(\"\", {\n      params: {\n        apikey: REACT_APP_TRIP_API_APPID,\n        lat: lat,\n        lon: long,\n        radius: 10000,\n        rate: \"3h\",\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getPlaceByGeo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardPlace from \"./CardPlace\";\nimport { placeData } from \"./placeData\";\nimport getPlaceByGeo from \"../../../apis/getPlaceByGeo\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 2 / span 2;\n  grid-row: 3 / span 2;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  text-align: left;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  height: 80%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nclass PlaceToVisit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { myPlaces: [] };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getPlaceByGeo(long, lat).then((data) => {\n            let a = [];\n            const temp = data.features;\n            temp.slice(Math.max(temp.length - 3, 0)).forEach((i) => {\n              a.push(i.properties.name);\n            });\n            this.setState({ myPlaces: a });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>\n          <b>Place to</b> Visit\n        </Title>\n        <Body>\n          {this.state.myPlaces.map((i, e) => {\n            return (\n              <CardPlace\n                bg={placeData[e].bg}\n                text={i}\n                grid={placeData[e].grid}\n                key={e}\n              />\n            );\n          })}\n        </Body>\n      </Container>\n    );\n  }\n}\n\nexport default PlaceToVisit;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 180px;\n  margin-top: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 5px 5px 15px 0;\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(3, 33%);\n  grid-template-rows: 2fr 1fr;\n`;\n\nconst IconBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #dee6f4;\n  border-radius: 20px 0 20px 0;\n  grid-area: 1 / 1 / span 1 / span 1;\n`;\n\nconst Icon = styled.img`\n  width: 80%;\n`;\n\nconst TextBox = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-area: 1 / 2 / span 1 / span 2;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Temp = styled.div`\n  font-family: \"Oswald\", sans-serif;\n  width: 45%;\n  padding-right: 10px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 40px;\n\n  &::after {\n    content: \"°C\";\n    font-size: 18px;\n  }\n`;\n\nconst CityBox = styled.div`\n  width: 60%;\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n`;\n\nconst City = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst Country = styled.p`\n  font-size: 14px;\n  margin: 0;\n  color: #555;\n`;\n\nconst WindBox = styled.div`\n  width: 80%;\n  height: 30%;\n  color: #aaa;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  grid-area: 2 / 1 / span 1 / span 3;\n  place-self: center;\n`;\n\nconst Text = styled.p``;\n\nconst VerticalDivider = styled.div`\n  width: 1px;\n  height: 12px;\n  background: #aaa;\n`;\n\nconst VerticalDividerL = styled.div`\n  width: 1px;\n  height: 50px;\n  background: #aaa;\n`;\n\nconst CardMedium = ({ icon, hum, wind, speed, temp, city, country }) => {\n  let windDirection;\n  if (wind >= 338 && wind <= 22) {\n    windDirection = \"North\";\n  }\n  if (wind >= 23 && wind <= 67) {\n    windDirection = \"Northeast\";\n  }\n  if (wind >= 68 && wind <= 112) {\n    windDirection = \"East\";\n  }\n  if (wind >= 113 && wind <= 157) {\n    windDirection = \"Southeast\";\n  }\n  if (wind >= 158 && wind <= 202) {\n    windDirection = \"South\";\n  }\n  if (wind >= 203 && wind <= 247) {\n    windDirection = \"Southwest\";\n  }\n  if (wind >= 248 && wind <= 292) {\n    windDirection = \"West\";\n  }\n  if (wind >= 293 && wind <= 337) {\n    windDirection = \"Northwest\";\n  }\n  return (\n    <Container>\n      <IconBox>\n        <Icon src={icon} />\n      </IconBox>\n\n      <TextBox>\n        <Temp>{temp}</Temp>\n        <VerticalDividerL />\n        <CityBox>\n          <City>{city}</City>\n          <Country>{country}</Country>\n        </CityBox>\n      </TextBox>\n\n      <WindBox>\n        <Text>Humidity: {hum}%</Text>\n        <VerticalDivider />\n        <Text>{windDirection}</Text>\n        <VerticalDivider />\n        <Text>{speed}km/h</Text>\n      </WindBox>\n    </Container>\n  );\n};\n\nexport default CardMedium;\n","export const otherData = [\n  {\n    city: \"guangzhou\",\n    country: \"Australia\",\n  },\n  {\n    city: \"Beijing\",\n    country: \"China\",\n  },\n  {\n    city: \"New york\",\n    country: \"USA\",\n  },\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardMedium from \"./CardMedium\";\nimport { otherData } from \"./otherData\";\nimport getWeatherByCity from \"../../../apis/getWeatherByCity\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst Container = styled.section`\n  width: 100%;\n  border-radius: 30px;\n  overflow-wrap: auto;\n  grid-area: 2 / 4 / span 3 / span 1;\n  align-self: end;\n  z-index: 100;\n  max-height: 500px;\n  overflow: auto;\n\n  -webkit-mask-image: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    color-stop(0, rgba(0, 0, 0, 0)),\n    color-stop(0.1, rgba(0, 0, 0, 1)),\n    color-stop(0.9, rgba(0, 0, 0, 1)),\n    color-stop(1, rgba(0, 0, 0, 0))\n  );\n`;\n\nclass Others extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlaces: [],\n    };\n  }\n\n  componentDidMount() {\n    const tempData = [];\n    otherData.forEach((i) => {\n      getWeatherByCity(i.city).then((data) => {\n        tempData.push(data);\n        this.setState({ myPlaces: tempData });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.myPlaces.map((i, e) => {\n          return (\n            <CardMedium\n              icon={weatherIcon.get(i.weather[0].main)}\n              hum={i.main.humidity}\n              wind={i.wind.deg}\n              speed={i.wind.speed}\n              temp={Math.round(i.main.temp - 273.15)}\n              city={i.name}\n              country={i.sys.country}\n              key={e}\n            />\n          );\n        })}\n      </Container>\n    );\n  }\n}\n\nexport default Others;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Today from \"./Today\";\nimport ThreeDays from \"./ThreeDays\";\nimport PlaceToVisit from \"./PlaceToVisit\";\nimport Others from \"./Others\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1.2fr repeat(2, 1fr) 1.5fr 0.1fr;\n  gap: 20px 30px;\n  grid-template-rows: repeat(4, 23%);\n`;\n\nconst Canva = () => (\n  <Container>\n    <Today />\n    <ThreeDays />\n    <PlaceToVisit />\n    <Others />\n  </Container>\n);\n\nexport default Canva;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst dark = \"#0270c2\";\nconst light = \"#1fa1f1\";\n\nconst Container = styled.div`\n  min-height: 300px;\n  position: absolute;\n  left: 0;\n  top: 40px;\n  z-index: 100;\n`;\n\nconst Box = styled.div`\n  width: 120px;\n  height: 190px;\n  background: ${light};\n  border-radius: 0 30px 30px 0;\n  box-shadow: rgba(50, 50, 50, 0.5) 8px 35px 55px 5px;\n`;\n\nconst Weather = styled.div`\n  width: 120px;\n  height: 95px;\n  background: ${dark};\n  border-radius: 0 30px 30px 15px;\n  z-index: 101;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled.img`\n  width: 80px;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  color: #fff;\n  margin: -15px 0 0 0;\n`;\n\nconst TempText = styled.p`\n  width: 120px;\n  height: 95px;\n  font-size: 30px;\n  color: #fff;\n  margin: 0;\n  font-family: \"Oswald\", sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &::after {\n    content: \"°C\";\n    color: #fff;\n    font-size: 20px;\n  }\n`;\n\nconst Temp = styled.div`\n  width: 80px;\n  height: 80px;\n`;\n\nconst Side1 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${dark};\n  clip-path: polygon(0% 100%, 0% 85%, 2% 92%, 5% 95%, 8% 98%, 15% 100%);\n`;\n\nconst Side2 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${light};\n  clip-path: polygon(0% 0%, 0% 15%, 2% 8%, 5% 5%, 8% 2%, 15% 0%);\n`;\n\nclass Clip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { icon: null, weather: null, temp: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myWeather\").innerHTML =\n              data.weather[0].main;\n            document.getElementById(\"myTemp\").innerHTML = Math.round(\n              Number(data.main.temp) - 273.15\n            );\n            this.setState({ icon: weatherIcon.get(data.weather[0].main) });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Side1 />\n        <Box>\n          <Weather>\n            <Icon src={this.state.icon} />\n            <Text id=\"myWeather\" />\n          </Weather>\n          <Temp>\n            <TempText id=\"myTemp\" />\n          </Temp>\n        </Box>\n        <Side2 />\n      </Container>\n    );\n  }\n}\n\nexport default Clip;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 800px;\n  min-width: 320px;\n  height: 30px;\n  margin-bottom: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 3px 10px 3px 20px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 90%;\n  height: 100%;\n  border: none;\n  padding: 0;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Icon = styled.i`\n  font-size: 18px;\n  color: #999;\n  cursor: pointer;\n  &:hover {\n    color: #000;\n  }\n`;\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Input placeholder=\"Search weather by areas...\"></Input>\n          <Icon className=\"fas fa-search\"></Icon>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Canva from \"../Canva\";\nimport Clip from \"../Canva/Clip\";\nimport SearchBar from \"../SearchBar\";\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #e3e8ec;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 1400px;\n  min-width: 1200px;\n  min-height: 700px;\n  max-height: 900px;\n  background-color: #fff;\n  border-radius: 30px;\n  padding: 40px;\n  position: relative;\n  overflow: hidden;\n`;\n\nfunction HomePage() {\n  return (\n    <Background>\n      <SearchBar />\n      <Container>\n        <Clip />\n        <Canva />\n      </Container>\n    </Background>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Homepage from \"../Homepage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/weather-web-app\">\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}