{"version":3,"sources":["serviceWorker.js","apis/apikey.js","apis/getDataByGeo/getDataByGeo.js","apis/getImageByCity/getImageByCity.js","components/Canva/Today/Today.jsx","components/Canva/ThreeDays/CardSmall/CardSmall.jsx","apis/getWeatherByCity/getWeatherByCity.js","apis/get7ForecastByCity/get7ForecastByCity.js","apis/weatherIcon.js","components/Canva/ThreeDays/ThreeDays.jsx","components/Canva/PlaceToVisit/CardPlace/CardPlace.jsx","apis/getPlaceByGeo/getPlaceByGeo.js","components/Canva/PlaceToVisit/PlaceToVisit.jsx","components/Canva/Others/CardMedium/CardMedium.jsx","components/Canva/Others/otherData.js","components/Canva/Others/isoCountries.js","components/Canva/Others/Others.jsx","components/Canva/Canva.jsx","components/Canva/Clip/Clip.jsx","components/SearchBar/SearchBar.jsx","components/Homepage/Homepage.jsx","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","require","config","process","REACT_APP_API_CURRENT","REACT_APP_API_FORECAST","REACT_APP_API_APPID","REACT_APP_IMAGE_API","REACT_APP_IMAGE_API_APPID","REACT_APP_TRIP_API","REACT_APP_TRIP_API_APPID","instance","REACT_APP_GOOGLE_API","REACT_APP_GOOGLE_API_APPID","create","baseURL","getDataByGeo","long","lat","get","params","lon","then","res","data","catch","err","console","log","getImageByCity","city","client_id","query","page","per_page","orientation","Container","styled","section","Box","div","City","Area","p","IconLoc","i","Wrapper","Text","Flag","img","Map","Today","props","state","myCover","addEventListener","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","document","getElementById","innerHTML","name","sys","country","setAttribute","imgData","image","results","Math","floor","random","urls","regular","setState","background","backgroundSize","backgroundPosition","style","this","className","id","React","Component","Icon","TextBox","Date","Weather","Temp","CardSmall","icon","date","weather","tempMax","tempMin","bg","fcolor","src","color","getWeatherByCity","q","a","coord","get7ForecastByCity","weatherIcon","set","Title","h3","Body","ThreeDays","days","tempDays","daily","forEach","dt","localdate","Intl","DateTimeFormat","weekday","format","localdt","map","e","main","round","temp","max","min","key","CardPlace","text","getPlaceByGeo","apikey","radius","rate","CardBox","PlaceToVisit","myPlaces","myPhotos","places","features","slice","length","push","properties","photos","backgroundImage","gridArea","IconBox","CityBox","Country","WindBox","VerticalDivider","VerticalDividerL","CardMedium","windDirection","hum","wind","speed","otherData","isoCountries","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","Others","tempData","humidity","deg","countryCode","hasOwnProperty","Canva","TempText","Side1","Side2","Clip","Number","Input","input","Background","HomePage","App","basename","exact","path","component","Homepage","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3255901a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","require(\"dotenv\").config();\n\nexport const {\n  REACT_APP_API_CURRENT,\n  REACT_APP_API_FORECAST,\n  REACT_APP_API_APPID,\n  REACT_APP_IMAGE_API,\n  REACT_APP_IMAGE_API_APPID,\n  REACT_APP_TRIP_API,\n  REACT_APP_TRIP_API_APPID,\n  REACT_APP_GOOGLE_API,\n  REACT_APP_GOOGLE_API_APPID,\n} = process.env;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getDataByGeo(long, lat) {\n  return instance\n    .get(\"\", {\n      params: {\n        lon: long,\n        lat: lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getDataByGeo;\n","import { REACT_APP_IMAGE_API, REACT_APP_IMAGE_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_IMAGE_API,\n});\n\nfunction getImageByCity(city) {\n  return instance\n    .get(\"\", {\n      params: {\n        client_id: REACT_APP_IMAGE_API_APPID,\n        query: city,\n        page: 1,\n        per_page: 5,\n        orientation: \"landscape\",\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getImageByCity;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\nimport getImageByCity from \"../../../apis/getImageByCity\";\n\nconst map =\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603434915/weather-app%20assets/iconfinder_opera_house_sydney_house_australia_architecture_landmark_travel_building_tourism_3465591_ybght9.svg\";\n\nconst Container = styled.section`\n  background-color: #eee;\n  border-radius: 30px;\n  grid-column: 1 / span 5;\n  grid-row: 1 / span 2;\n  position: relative;\n`;\n\nconst Box = styled.div`\n  width: 180px;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: absolute;\n  top: 0;\n  left: 120px;\n  padding-top: 100px;\n  background-color: rgba(222, 230, 244, 0.7);\n  color: #253237;\n`;\n\nconst City = styled.div`\n  display: grid;\n  grid-template-columns: 30px 120px;\n  grid-template-rows: repeat(2, 30px);\n`;\n\nconst Area = styled.p`\n  font-size: 12px;\n  margin: 0 6px 0 0;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n  color: #0270c2;\n`;\n\nconst Wrapper = styled.div`\n  height: 20px;\n  grid-row: 2;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n`;\n\nconst Text = styled.div`\n  font-weight: 500;\n  grid-row: 1;\n  grid-column: 2;\n  display: flex;\n  align-items: center;\n  text-shadow: rgba(200, 200, 200, 0.5) 0 0 3px;\n`;\n\nconst Flag = styled.img`\n  width: 20px;\n  grid-row: 2;\n  grid-column: 1;\n  align-self: top;\n`;\n\nconst Map = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-top: 40px;\n`;\n\nclass Today extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { myCover: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myCity\").innerHTML = data.name;\n            document.getElementById(\"myCountry\").innerHTML = data.sys.country;\n            document\n              .getElementById(\"myFlag\")\n              .setAttribute(\n                \"src\",\n                \"https://www.countryflags.io/\" +\n                  data.sys.country +\n                  \"/flat/64.png\"\n              );\n            getImageByCity(data.name).then((imgData) => {\n              const image =\n                imgData.results[Math.floor(Math.random() * 5)].urls.regular;\n              this.setState({\n                myCover: {\n                  background: `url(${image})`,\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                },\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container style={this.state.myCover}>\n        <Box>\n          <City>\n            <IconLoc className=\"fas fa-map-marker-alt\" />\n            <Text id=\"myCity\"></Text>\n            <Wrapper>\n              <Area id=\"myCountry\"></Area>\n              <Flag id=\"myFlag\" />\n            </Wrapper>\n          </City>\n\n          <Map\n            style={{\n              background: `url(${map})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n            }}\n          />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default Today;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 80px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 0 15px 35px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst Icon = styled.img`\n  width: 25%;\n`;\n\nconst TextBox = styled.div`\n  width: 30%;\n`;\n\nconst Date = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst Weather = styled.p`\n  font-size: 14px;\n  margin: 0;\n  color: #555;\n`;\n\nconst Temp = styled.div`\n  width: 35%;\n  height: 105%;\n  font-weight: 700;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`;\n\nconst CardSmall = ({ icon, date, weather, tempMax, tempMin, bg, fcolor }) => (\n  <Container>\n    <Icon src={icon} />\n    <TextBox>\n      <Date>{date}</Date>\n      <Weather>{weather}</Weather>\n    </TextBox>\n    <Temp style={{ background: bg, color: fcolor }}>\n      {tempMax}° / {tempMin}°\n    </Temp>\n  </Container>\n);\n\nexport default CardSmall;\n","import { REACT_APP_API_CURRENT, REACT_APP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_CURRENT + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nfunction getWeatherByCity(city) {\n  return instance\n    .get(\"\", {\n      params: {\n        q: city,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getWeatherByCity;\n","import { REACT_APP_API_FORECAST, REACT_APP_API_APPID } from \"../apikey\";\nimport getWeatherByCity from \"../getWeatherByCity\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_FORECAST + \"?appid=\" + REACT_APP_API_APPID,\n});\n\nasync function get7ForecastByCity(city) {\n  let a;\n  await getWeatherByCity(city).then((res) => {\n    a = res.coord;\n  });\n  return instance\n    .get(\"\", {\n      params: {\n        lon: a.lon,\n        lat: a.lat,\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default get7ForecastByCity;\n","const weatherIcon = new Map();\n\nweatherIcon.set(\n  \"Clear\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517457/weather-app%20assets/clear_szhil3.svg\"\n);\nweatherIcon.set(\n  \"Rain\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603517503/weather-app%20assets/rain_isnziw.svg\"\n);\nweatherIcon.set(\n  \"Clouds\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603428277/weather-app%20assets/iconfinder_weather-02_1530391_lqsvis.svg\"\n);\nweatherIcon.set(\n  \"Mist\",\n  \"https://res.cloudinary.com/dr99oorie/image/upload/v1603708766/weather-app%20assets/mist_xiprlr.svg\"\n);\nexport default weatherIcon;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardSmall from \"./CardSmall\";\nimport get7ForecastByCity from \"../../../apis/get7ForecastByCity\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 1;\n  grid-row: 3;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n`;\n\nconst Body = styled.div``;\n\nclass ThreeDays extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: [],\n    };\n  }\n\n  componentDidMount() {\n    get7ForecastByCity(\"los angeles\").then((data) => {\n      const tempDays = [data.daily[0], data.daily[1], data.daily[2]];\n\n      tempDays.forEach((i) => {\n        // convert unix utc dt to local date\n        const date = new Date(i.dt * 1e3);\n        const options = { weekday: \"long\" };\n        const localdate = new Intl.DateTimeFormat(\"en-US\", options).format(\n          date\n        );\n        i.localdt = localdate;\n        // get icon by weather\n      });\n      this.setState({\n        days: tempDays,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>\n          <b>3 Days</b> Forecast\n        </Title>\n        <Body>\n          {this.state.days.map((i, e) => {\n            return (\n              <CardSmall\n                icon={weatherIcon.get(i.weather[0].main)}\n                date={i.localdt}\n                weather={i.weather[0].main}\n                tempMax={Math.round(i.temp.max - 273.15)}\n                tempMin={Math.round(i.temp.min - 273.15)}\n                bg={e === 0 ? \"#0aa9ee\" : \"#dee6f4\"}\n                fcolor={e === 0 ? \"#fff\" : \"#000\"}\n                key={e}\n              />\n            );\n          })}\n        </Body>\n      </Container>\n    );\n  }\n}\n\nexport default ThreeDays;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.1) 5px 25px 35px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst City = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin: 20px 20px;\n  text-shadow: rgba(10, 10, 10, 1) 1px 1px 5px;\n`;\n\nconst IconLoc = styled.i`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  color: #fff;\n  align-items: center;\n  justify-content: center;\n  grid-row: 1;\n  grid-column: 1;\n`;\n\nconst Text = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n  margin: 0 0 0 10px;\n  color: #fff;\n`;\n\nconst CardPlace = ({ text, style }) => (\n  <Container style={style}>\n    <City>\n      <IconLoc className=\"fas fa-map-marker-alt\" />\n      <Text>{text}</Text>\n    </City>\n  </Container>\n);\n\nexport default CardPlace;\n","import { REACT_APP_TRIP_API, REACT_APP_TRIP_API_APPID } from \"../apikey\";\n\nconst axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: REACT_APP_TRIP_API + \"/en/places/radius\",\n});\n\nfunction getPlaceByGeo(long, lat) {\n  return instance\n    .get(\"\", {\n      params: {\n        apikey: REACT_APP_TRIP_API_APPID,\n        lat: lat,\n        lon: long,\n        radius: 10000,\n        rate: \"3h\",\n      },\n    })\n    .then((res) => res.data)\n    .catch((err) => console.log(err));\n}\n\nexport default getPlaceByGeo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardPlace from \"./CardPlace\";\nimport getPlaceByGeo from \"../../../apis/getPlaceByGeo\";\nimport getImageByCity from \"../../../apis/getImageByCity\";\n\nconst Container = styled.section`\n  background-color: #fff;\n  border-radius: 30px;\n  grid-column: 2 / span 2;\n  grid-row: 3 / span 2;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  font-size: 22px;\n  text-align: left;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  height: 80%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nconst CardBox = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nclass PlaceToVisit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlaces: [],\n      myPhotos: [],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getPlaceByGeo(long, lat).then((data) => {\n            let places = [];\n            const temp = data.features;\n            temp.slice(Math.max(temp.length - 3, 0)).forEach((i) => {\n              places.push(i.properties.name);\n            });\n            this.setState({ myPlaces: places });\n\n            // get photos of places\n            let photos = [];\n            places.forEach((i, e) => {\n              getImageByCity(i).then((img) => {\n                const a = img.results[0].urls.regular;\n                const style = {\n                  backgroundImage: `url(${a})`,\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                };\n                photos.push(style);\n                this.setState({ myPhotos: photos });\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>\n          <b>Place to</b> Visit\n        </Title>\n        <Body>\n          <CardBox style={{ gridArea: \"1 / 1 / span 2 / 1\" }}>\n            <CardPlace\n              style={this.state.myPhotos[0]}\n              text={this.state.myPlaces[0]}\n            />\n          </CardBox>\n          <CardBox style={{ gridArea: \"1 / 2 / 1 / 2\" }}>\n            <CardPlace\n              style={this.state.myPhotos[1]}\n              text={this.state.myPlaces[1]}\n            />\n          </CardBox>\n          <CardBox style={{ gridArea: \"2 / 2 / 2 / 2\" }}>\n            <CardPlace\n              style={this.state.myPhotos[2]}\n              text={this.state.myPlaces[2]}\n            />\n          </CardBox>\n        </Body>\n      </Container>\n    );\n  }\n}\n\nexport default PlaceToVisit;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 180px;\n  margin-top: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: rgba(70, 70, 70, 0.2) 0 15px 55px 0;\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(3, 33%);\n  grid-template-rows: 2fr 1fr;\n`;\n\nconst IconBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #dee6f4;\n  border-radius: 20px 0 20px 0;\n  grid-area: 1 / 1 / span 1 / span 1;\n`;\n\nconst Icon = styled.img`\n  width: 80%;\n`;\n\nconst TextBox = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-area: 1 / 2 / span 1 / span 2;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Temp = styled.div`\n  font-family: \"Oswald\", sans-serif;\n  font-weight: 600;\n  width: 45%;\n  padding-right: 10px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 45px;\n\n  &::after {\n    content: \"°C\";\n    font-size: 18px;\n  }\n`;\n\nconst CityBox = styled.div`\n  width: 60%;\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n`;\n\nconst City = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0;\n`;\n\nconst Country = styled.p`\n  font-size: 13px;\n  margin: 0;\n  color: #555;\n`;\n\nconst WindBox = styled.div`\n  width: 80%;\n  height: 30%;\n  color: #666;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  grid-area: 2 / 1 / span 1 / span 3;\n  place-self: center;\n`;\n\nconst Text = styled.p``;\n\nconst VerticalDivider = styled.div`\n  width: 1px;\n  height: 12px;\n  background: #aaa;\n`;\n\nconst VerticalDividerL = styled.div`\n  width: 1px;\n  height: 40px;\n  background: #aaa;\n`;\n\nconst CardMedium = ({ icon, hum, wind, speed, temp, city, country }) => {\n  let windDirection;\n  if (wind >= 338 && wind <= 22) {\n    windDirection = \"North\";\n  }\n  if (wind >= 23 && wind <= 67) {\n    windDirection = \"Northeast\";\n  }\n  if (wind >= 68 && wind <= 112) {\n    windDirection = \"East\";\n  }\n  if (wind >= 113 && wind <= 157) {\n    windDirection = \"Southeast\";\n  }\n  if (wind >= 158 && wind <= 202) {\n    windDirection = \"South\";\n  }\n  if (wind >= 203 && wind <= 247) {\n    windDirection = \"Southwest\";\n  }\n  if (wind >= 248 && wind <= 292) {\n    windDirection = \"West\";\n  }\n  if (wind >= 293 && wind <= 337) {\n    windDirection = \"Northwest\";\n  }\n  return (\n    <Container>\n      <IconBox>\n        <Icon src={icon} />\n      </IconBox>\n\n      <TextBox>\n        <Temp>{temp}</Temp>\n        <VerticalDividerL />\n        <CityBox>\n          <City>{city}</City>\n          <Country>{country}</Country>\n        </CityBox>\n      </TextBox>\n\n      <WindBox>\n        <Text>Humidity: {hum}%</Text>\n        <VerticalDivider />\n        <Text>{windDirection}</Text>\n        <VerticalDivider />\n        <Text>{speed}km/h</Text>\n      </WindBox>\n    </Container>\n  );\n};\n\nexport default CardMedium;\n","export const otherData = [\n  {\n    city: \"Longdon\",\n    country: \"UK\",\n  },\n  {\n    city: \"Beijing\",\n    country: \"China\",\n  },\n];\n","var isoCountries = {\n  AF: \"Afghanistan\",\n  AX: \"Aland Islands\",\n  AL: \"Albania\",\n  DZ: \"Algeria\",\n  AS: \"American Samoa\",\n  AD: \"Andorra\",\n  AO: \"Angola\",\n  AI: \"Anguilla\",\n  AQ: \"Antarctica\",\n  AG: \"Antigua And Barbuda\",\n  AR: \"Argentina\",\n  AM: \"Armenia\",\n  AW: \"Aruba\",\n  AU: \"Australia\",\n  AT: \"Austria\",\n  AZ: \"Azerbaijan\",\n  BS: \"Bahamas\",\n  BH: \"Bahrain\",\n  BD: \"Bangladesh\",\n  BB: \"Barbados\",\n  BY: \"Belarus\",\n  BE: \"Belgium\",\n  BZ: \"Belize\",\n  BJ: \"Benin\",\n  BM: \"Bermuda\",\n  BT: \"Bhutan\",\n  BO: \"Bolivia\",\n  BA: \"Bosnia And Herzegovina\",\n  BW: \"Botswana\",\n  BV: \"Bouvet Island\",\n  BR: \"Brazil\",\n  IO: \"British Indian Ocean Territory\",\n  BN: \"Brunei Darussalam\",\n  BG: \"Bulgaria\",\n  BF: \"Burkina Faso\",\n  BI: \"Burundi\",\n  KH: \"Cambodia\",\n  CM: \"Cameroon\",\n  CA: \"Canada\",\n  CV: \"Cape Verde\",\n  KY: \"Cayman Islands\",\n  CF: \"Central African Republic\",\n  TD: \"Chad\",\n  CL: \"Chile\",\n  CN: \"China\",\n  CX: \"Christmas Island\",\n  CC: \"Cocos (Keeling) Islands\",\n  CO: \"Colombia\",\n  KM: \"Comoros\",\n  CG: \"Congo\",\n  CD: \"Congo, Democratic Republic\",\n  CK: \"Cook Islands\",\n  CR: \"Costa Rica\",\n  CI: \"Cote D'Ivoire\",\n  HR: \"Croatia\",\n  CU: \"Cuba\",\n  CY: \"Cyprus\",\n  CZ: \"Czech Republic\",\n  DK: \"Denmark\",\n  DJ: \"Djibouti\",\n  DM: \"Dominica\",\n  DO: \"Dominican Republic\",\n  EC: \"Ecuador\",\n  EG: \"Egypt\",\n  SV: \"El Salvador\",\n  GQ: \"Equatorial Guinea\",\n  ER: \"Eritrea\",\n  EE: \"Estonia\",\n  ET: \"Ethiopia\",\n  FK: \"Falkland Islands (Malvinas)\",\n  FO: \"Faroe Islands\",\n  FJ: \"Fiji\",\n  FI: \"Finland\",\n  FR: \"France\",\n  GF: \"French Guiana\",\n  PF: \"French Polynesia\",\n  TF: \"French Southern Territories\",\n  GA: \"Gabon\",\n  GM: \"Gambia\",\n  GE: \"Georgia\",\n  DE: \"Germany\",\n  GH: \"Ghana\",\n  GI: \"Gibraltar\",\n  GR: \"Greece\",\n  GL: \"Greenland\",\n  GD: \"Grenada\",\n  GP: \"Guadeloupe\",\n  GU: \"Guam\",\n  GT: \"Guatemala\",\n  GG: \"Guernsey\",\n  GN: \"Guinea\",\n  GW: \"Guinea-Bissau\",\n  GY: \"Guyana\",\n  HT: \"Haiti\",\n  HM: \"Heard Island & Mcdonald Islands\",\n  VA: \"Holy See (Vatican City State)\",\n  HN: \"Honduras\",\n  HK: \"Hong Kong\",\n  HU: \"Hungary\",\n  IS: \"Iceland\",\n  IN: \"India\",\n  ID: \"Indonesia\",\n  IR: \"Iran, Islamic Republic Of\",\n  IQ: \"Iraq\",\n  IE: \"Ireland\",\n  IM: \"Isle Of Man\",\n  IL: \"Israel\",\n  IT: \"Italy\",\n  JM: \"Jamaica\",\n  JP: \"Japan\",\n  JE: \"Jersey\",\n  JO: \"Jordan\",\n  KZ: \"Kazakhstan\",\n  KE: \"Kenya\",\n  KI: \"Kiribati\",\n  KR: \"Korea\",\n  KW: \"Kuwait\",\n  KG: \"Kyrgyzstan\",\n  LA: \"Lao People's Democratic Republic\",\n  LV: \"Latvia\",\n  LB: \"Lebanon\",\n  LS: \"Lesotho\",\n  LR: \"Liberia\",\n  LY: \"Libyan Arab Jamahiriya\",\n  LI: \"Liechtenstein\",\n  LT: \"Lithuania\",\n  LU: \"Luxembourg\",\n  MO: \"Macao\",\n  MK: \"Macedonia\",\n  MG: \"Madagascar\",\n  MW: \"Malawi\",\n  MY: \"Malaysia\",\n  MV: \"Maldives\",\n  ML: \"Mali\",\n  MT: \"Malta\",\n  MH: \"Marshall Islands\",\n  MQ: \"Martinique\",\n  MR: \"Mauritania\",\n  MU: \"Mauritius\",\n  YT: \"Mayotte\",\n  MX: \"Mexico\",\n  FM: \"Micronesia, Federated States Of\",\n  MD: \"Moldova\",\n  MC: \"Monaco\",\n  MN: \"Mongolia\",\n  ME: \"Montenegro\",\n  MS: \"Montserrat\",\n  MA: \"Morocco\",\n  MZ: \"Mozambique\",\n  MM: \"Myanmar\",\n  NA: \"Namibia\",\n  NR: \"Nauru\",\n  NP: \"Nepal\",\n  NL: \"Netherlands\",\n  AN: \"Netherlands Antilles\",\n  NC: \"New Caledonia\",\n  NZ: \"New Zealand\",\n  NI: \"Nicaragua\",\n  NE: \"Niger\",\n  NG: \"Nigeria\",\n  NU: \"Niue\",\n  NF: \"Norfolk Island\",\n  MP: \"Northern Mariana Islands\",\n  NO: \"Norway\",\n  OM: \"Oman\",\n  PK: \"Pakistan\",\n  PW: \"Palau\",\n  PS: \"Palestinian Territory, Occupied\",\n  PA: \"Panama\",\n  PG: \"Papua New Guinea\",\n  PY: \"Paraguay\",\n  PE: \"Peru\",\n  PH: \"Philippines\",\n  PN: \"Pitcairn\",\n  PL: \"Poland\",\n  PT: \"Portugal\",\n  PR: \"Puerto Rico\",\n  QA: \"Qatar\",\n  RE: \"Reunion\",\n  RO: \"Romania\",\n  RU: \"Russian Federation\",\n  RW: \"Rwanda\",\n  BL: \"Saint Barthelemy\",\n  SH: \"Saint Helena\",\n  KN: \"Saint Kitts And Nevis\",\n  LC: \"Saint Lucia\",\n  MF: \"Saint Martin\",\n  PM: \"Saint Pierre And Miquelon\",\n  VC: \"Saint Vincent And Grenadines\",\n  WS: \"Samoa\",\n  SM: \"San Marino\",\n  ST: \"Sao Tome And Principe\",\n  SA: \"Saudi Arabia\",\n  SN: \"Senegal\",\n  RS: \"Serbia\",\n  SC: \"Seychelles\",\n  SL: \"Sierra Leone\",\n  SG: \"Singapore\",\n  SK: \"Slovakia\",\n  SI: \"Slovenia\",\n  SB: \"Solomon Islands\",\n  SO: \"Somalia\",\n  ZA: \"South Africa\",\n  GS: \"South Georgia And Sandwich Isl.\",\n  ES: \"Spain\",\n  LK: \"Sri Lanka\",\n  SD: \"Sudan\",\n  SR: \"Suriname\",\n  SJ: \"Svalbard And Jan Mayen\",\n  SZ: \"Swaziland\",\n  SE: \"Sweden\",\n  CH: \"Switzerland\",\n  SY: \"Syrian Arab Republic\",\n  TW: \"Taiwan\",\n  TJ: \"Tajikistan\",\n  TZ: \"Tanzania\",\n  TH: \"Thailand\",\n  TL: \"Timor-Leste\",\n  TG: \"Togo\",\n  TK: \"Tokelau\",\n  TO: \"Tonga\",\n  TT: \"Trinidad And Tobago\",\n  TN: \"Tunisia\",\n  TR: \"Turkey\",\n  TM: \"Turkmenistan\",\n  TC: \"Turks And Caicos Islands\",\n  TV: \"Tuvalu\",\n  UG: \"Uganda\",\n  UA: \"Ukraine\",\n  AE: \"United Arab Emirates\",\n  GB: \"United Kingdom\",\n  US: \"United States\",\n  UM: \"United States Outlying Islands\",\n  UY: \"Uruguay\",\n  UZ: \"Uzbekistan\",\n  VU: \"Vanuatu\",\n  VE: \"Venezuela\",\n  VN: \"Viet Nam\",\n  VG: \"Virgin Islands, British\",\n  VI: \"Virgin Islands, U.S.\",\n  WF: \"Wallis And Futuna\",\n  EH: \"Western Sahara\",\n  YE: \"Yemen\",\n  ZM: \"Zambia\",\n  ZW: \"Zimbabwe\",\n};\n\nexport function getCountryName(countryCode) {\n  if (isoCountries.hasOwnProperty(countryCode)) {\n    return isoCountries[countryCode];\n  } else {\n    return countryCode;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CardMedium from \"./CardMedium\";\nimport { otherData } from \"./otherData\";\nimport getWeatherByCity from \"../../../apis/getWeatherByCity\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\nimport { getCountryName } from \"./isoCountries\";\n\nconst Container = styled.section`\n  width: 100%;\n  grid-area: 2 / 4 / span 3 / span 1;\n  align-self: end;\n  z-index: 100;\n  max-height: 700px;\n  overflow: visible;\n\n  /* -webkit-mask-image: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    color-stop(0, rgba(0, 0, 0, 1)),\n    color-stop(0.9, rgba(0, 0, 0, 1)),\n    color-stop(1, rgba(0, 0, 0, 0))\n  ); */\n`;\n\nclass Others extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlaces: [],\n    };\n  }\n\n  componentDidMount() {\n    const tempData = [];\n    otherData.forEach((i) => {\n      getWeatherByCity(i.city).then((data) => {\n        tempData.push(data);\n        this.setState({ myPlaces: tempData });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.myPlaces.map((i, e) => {\n          return (\n            <CardMedium\n              icon={weatherIcon.get(i.weather[0].main)}\n              hum={i.main.humidity}\n              wind={i.wind.deg}\n              speed={i.wind.speed}\n              temp={Math.round(i.main.temp - 273.15)}\n              city={i.name}\n              country={getCountryName(i.sys.country)}\n              key={e}\n            />\n          );\n        })}\n      </Container>\n    );\n  }\n}\n\nexport default Others;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Today from \"./Today\";\nimport ThreeDays from \"./ThreeDays\";\nimport PlaceToVisit from \"./PlaceToVisit\";\nimport Others from \"./Others\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1.2fr repeat(2, 1fr) 1.5fr 0.1fr;\n  gap: 20px 30px;\n  grid-template-rows: repeat(4, 23%);\n`;\n\nconst Canva = () => (\n  <Container>\n    <Today />\n    <ThreeDays />\n    <PlaceToVisit />\n    <Others />\n  </Container>\n);\n\nexport default Canva;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport getDataByGeo from \"../../../apis/getDataByGeo\";\nimport weatherIcon from \"../../../apis/weatherIcon\";\n\nconst dark = \"#0270c2\";\nconst light = \"#1fa1f1\";\n\nconst Container = styled.div`\n  min-height: 300px;\n  position: absolute;\n  left: 0;\n  top: 40px;\n  z-index: 100;\n`;\n\nconst Box = styled.div`\n  width: 120px;\n  height: 190px;\n  background: ${light};\n  border-radius: 0 30px 30px 0;\n  box-shadow: rgba(50, 50, 50, 0.5) 8px 35px 55px 5px;\n`;\n\nconst Weather = styled.div`\n  width: 120px;\n  height: 95px;\n  background: ${dark};\n  border-radius: 0 30px 30px 15px;\n  z-index: 101;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled.img`\n  width: 80px;\n`;\n\nconst Text = styled.p`\n  font-size: 12px;\n  color: #fff;\n  margin: -15px 0 0 0;\n`;\n\nconst TempText = styled.p`\n  font-size: 50px;\n  color: #fff;\n  margin: 0;\n  font-family: \"Oswald\", sans-serif;\n  font-weight: 600;\n  text-align: center;\n\n  &::after {\n    content: \"°C\";\n    color: #fff;\n    font-size: 20px;\n  }\n`;\n\nconst Temp = styled.div`\n  width: 120px;\n  height: 95px;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Side1 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${dark};\n  clip-path: polygon(0% 100%, 0% 85%, 2% 92%, 5% 95%, 8% 98%, 15% 100%);\n`;\n\nconst Side2 = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${light};\n  clip-path: polygon(0% 0%, 0% 15%, 2% 8%, 5% 5%, 8% 2%, 15% 0%);\n`;\n\nclass Clip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { icon: null, weather: null, temp: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", () => {\n      let long;\n      let lat;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          long = position.coords.longitude;\n          lat = position.coords.latitude;\n\n          getDataByGeo(long, lat).then((data) => {\n            document.getElementById(\"myWeather\").innerHTML =\n              data.weather[0].main;\n            document.getElementById(\"myTemp\").innerHTML = Math.round(\n              Number(data.main.temp) - 273.15\n            );\n            this.setState({ icon: weatherIcon.get(data.weather[0].main) });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Side1 />\n        <Box>\n          <Weather>\n            <Icon src={this.state.icon} />\n            <Text id=\"myWeather\" />\n          </Weather>\n          <Temp>\n            <TempText id=\"myTemp\" />\n          </Temp>\n        </Box>\n        <Side2 />\n      </Container>\n    );\n  }\n}\n\nexport default Clip;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 800px;\n  min-width: 320px;\n  height: 30px;\n  margin-bottom: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 3px 10px 3px 20px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 90%;\n  height: 100%;\n  border: none;\n  padding: 0;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Icon = styled.i`\n  font-size: 18px;\n  color: #999;\n  cursor: pointer;\n  &:hover {\n    color: #000;\n  }\n`;\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Input placeholder=\"Search weather by areas...\"></Input>\n          <Icon className=\"fas fa-search\"></Icon>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Canva from \"../Canva\";\nimport Clip from \"../Canva/Clip\";\nimport SearchBar from \"../SearchBar\";\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #e3e8ec;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 1400px;\n  min-width: 1200px;\n  min-height: 700px;\n  max-height: 900px;\n  background-color: #fff;\n  border-radius: 30px;\n  padding: 40px;\n  position: relative;\n  overflow: hidden;\n  box-shadow: rgba(10, 10, 10, 0.5) 0 100px 65px 0;\n`;\n\nfunction HomePage() {\n  return (\n    <Background>\n      <Container>\n        <Clip />\n        <Canva />\n      </Container>\n    </Background>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Homepage from \"../Homepage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/weather-web-app\">\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}